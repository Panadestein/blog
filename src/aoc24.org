# -*- eval: (face-remap-add-relative 'default '(:family "BQN386 Unicode" :height 180)); -*-
#+TITLE: Coding in Advent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="assets/style.css"/>
#+HTML_HEAD: <link rel="icon" href="assets/favicon.ico" type="image/x-icon">
#+HTML_HEAD: <style>
#+HTML_HEAD:   #table-of-contents > h2 { display: none; }
#+HTML_HEAD:   #text-table-of-contents > ul { 
#+HTML_HEAD:     display: grid;
#+HTML_HEAD:     grid-template-columns: repeat(5, 1fr);
#+HTML_HEAD:     gap: 10px;
#+HTML_HEAD:     list-style: none;
#+HTML_HEAD:     padding: 0;
#+HTML_HEAD:     margin: 0;
#+HTML_HEAD:   }
#+HTML_HEAD:   #table-of-contents > ul > li {
#+HTML_HEAD:     text-align: center;
#+HTML_HEAD:   }
#+HTML_HEAD: </style>

#+TOC: headlines 1 :ignore-title t

** Foreword
:PROPERTIES:
:UNNUMBERED: notoc
:END:

These are my [[https://adventofcode.com/2024][Advent of Code]] solutions for the year 2024. The following top level definitions and imports
are shared by the various puzzles:

#+begin_src bqn :tangle ./bqn/aoc24.bqn
  Split ← (¬-˜⊢×·+`»⊸>)∘≠⊔⊢
  Input ← •Flines{"../supp/aoc/2024/"∾".inp"∾˜•Fmt𝕩}
#+end_src

#+RESULTS:
: (file).Lines(function block)

** I

#+begin_src bqn :tangle ./bqn/aoc24.bqn 
  I ← {
    inp ← >(•ParseFloat¨' '⊸Split)¨Input𝕩
    eins ⇐ +´|-´˘∧˘⌾⍉inp
    zwei ⇐ {
      +´𝕨×-´(∧𝕩)⊸⍋¨(⊢⋈-⟜1)𝕨
    }´<˘⍉inp
  }

  (I 1).zwei
#+end_src

#+RESULTS:
: 23177084

** II
** III
** IV
** V
** VI
** VII
** VIII
** IX
** X
** XI
** XII
** XIII
** XIV
** XV
** XVI
** XVII
** XVIII
** XIX
** XX
** XXI
** XXII
** XXIII
** XXIV
** XXV

#+BEGIN_EXPORT html
  <div style="text-align: center; font-size: 2em; padding: 20px 0;">
    <a href="https://panadestein.github.io/blog/" style="text-decoration: none;">⊑∘∞</a>
  </div>
#+END_EXPORT
