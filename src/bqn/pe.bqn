utils ← {
  Sieve ⇐ 2⊸↓{
    L ← 𝔽{0¨⌾((𝕨×𝔽/(⌈𝕨÷˜≠)⊸↑𝕩)⊸⊏)𝕩}
    M ← ⊢>×˜∘⊣⊸⥊⟜0»≠∘⊢⥊↑⟜1
    𝔽/(𝕩⥊1)≤⟜20◶L‿M⍟⊑´⌽𝔽↕⌈√𝕩
  }
  Rosser ⇐ ⌈⋆⁼{𝔽∘𝔽⊸+⟜𝔽⊸×}
  Tau ⇐ {2+´(2⊸×-⊢×⊣=÷˜⟜𝕩)⟜(0=|⟜𝕩)2↓↕1+⌊√𝕩}
  Sigma ⇐ {+´1∾𝕩⊸÷⊸∾(0=|⟜𝕩)⊸/2↓↕1+⌊√𝕩}
}
parsing ← {
  Split ⇐ (¬-˜⊢×·+`»⊸>)∘≠⊔⊢
}

E1 ← +´(∨´0=5‿3|<)⊸/

E2 ← {+´(¬2⊸|)⊸/{⊑¨+`∘⌽⍟(↕𝕩)↕2}(⌈0.5+𝕩⊸×÷○(⋆⁼)2÷˜1⊸+)√5}

E3 ← ⊢´(0=|)◶⟨+⟜2⊸⋈, ⊣⋈÷˜⟩´•_while_(×˜⊸<´)

E4 ← ⌈´·(⌽⊸≡•Fmt)¨⊸/·⥊×⌜˜

E5 ← •math.LCM´

E6 ← ×˜⊸(+´×-⊣)

E7 ← -⟜1⊑utils{𝕗.Sieve𝕗.Rosser}

E8 ← ⌈´·(×´⊢-@+48˙)˘13⊸↕

E9 ← {⋆⟜4{2×××𝔽˜-𝔽}´¨1+/○⥊⟜(↕≢)⌊⊸=𝕩÷˜(⊢×+)⌜○(1+↕)˜⌈√𝕩}

E10 ← +´utils.Sieve

E11 ← {⌈´∾(×˝˘4⊸↕)¨(4≤≠)¨⊸/((⌽++´∘≢)⊸∾·+⌜´↕¨∘≢)⊸⊔⟜(∾˜)𝕩}⌈(⌈´∘⥊·×˝˘4⊸↕){𝔽⌈𝔽∘⍉}

E12 ← (2÷˜-⟜1⊸×)·⊢´{𝕊:
  (𝕩+1)⋈˜×´utils.Tau¨(2⊸|)◶⟨÷⟜2⋈1⊸+, ⊢⋈2÷˜1⊸+⟩𝕩
}´•_while_(500≥⊑)

E13 ← {∾•Fmt¨{c∾˜𝕩10{𝕩-𝕗×c↩⌊𝕗÷˜𝕩+↩c}¨˜c←0}⌾⌽+˝•ParseFloat∘⋈⚇0>•FLines𝕩}

E14 ← {
  c ← •HashMap˜⋈1
  ⊑⍒2⊸|◶⟨÷⟜2, 1+3⊸×⟩{
    c.Has𝕩 ? c.Get𝕩;
    𝕩(⊢⊣c.Set)1+𝕊𝔽𝕩
  }¨1+↕𝕩
}

E15 ← ⊢´∘⥊(»+»˘)⍟(2-˜+´∘≢)

E16 ← +´10{𝕗⊸(|+⟜»·⌊÷˜)⍟(⌈𝕗⋆⁼2×𝕗-1)}∘(2⊸×)⍟1000

MP ← {b𝕊n:
  _o ← {b⊸(|+⟜»·⌊÷˜)⍟(⌈b⋆⁼𝕨×b-1)𝕨𝔽𝕩}
  ⟨+⌾⊑, ×⟩{∾•Fmt¨⌽𝕩𝕎_o´n}¨b⊸⋆⁼{(𝔾∘𝔽⌈´⊸×⟜≠)⋈1∾·𝔾·+´𝔽}(0⥊˜1+⌊)n
}

E17 ← (|⋈˜·⌊÷˜) {
   𝔽 _𝕣_ 𝕘 1000: 11;
   𝕩<100 ? (⊑10‿20⊸>⊐1˙)◶⟨0⊸⋈⊑𝔾, 𝕘⊑˜1⋈-⟜10, +´·⊑⟜𝕘2‿0⋈¨10⊸𝔽⟩𝕩;
   (7+0⊸⋈⊑𝔾)⊸+⟜(××3+𝕊)´100𝔽𝕩
} [0‿3‿3‿5‿4‿4‿3‿5‿5‿4, 3‿6‿6‿8‿8‿7‿7‿9‿8‿8, 0‿0‿6‿6‿5‿5‿5‿7‿6‿6]

E18 ← ⊑+⟜(⌈⟜«)˝

E19 ← {
  m ← 31‿28‿31‿30‿31‿30‿31‿31‿30‿31‿30‿31
  {+´0=7|2+`⥊𝕩⊸+⌾(1⊏⍉)m˘𝕩}0=4|↓⟜↕○(1⊸+)´𝕩
}

E20 ← 10{𝕗⊸(|+⟜»·⌊÷˜)⍟(⌈𝕗⋆⁼100×𝕗-1)}∘×´

E21 ← {+´/𝕩↑utils.Sigma¨⊸(≠∧⊢=·⊏˜⌊⟜𝕩)↕𝕩+1}
