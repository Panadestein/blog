# -*- eval: (face-remap-add-relative 'default '(:family "BQN386 Unicode" :height 180)); -*-
#+TITLE: Songs to pave the seasons
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="assets/style.css"/>

Analysis of my [[https://support.spotify.com/us/article/understanding-my-data/][Spotify data]] for the period 2016-2024.

** Technical details

This is a suitable task for an array language, so I rely on [[https://mlochbaum.github.io/BQN/index.html][BQN]] which is my
favorite one:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  ⟨P⇐Parse⟩ ← •Import "../bqn-libs/json.bqn"
  @ ⊣ spd ← P •file.Chars "../supp/spdat/data.json"
#+end_src

Additional structural information is needed, namely index of the songs,
artists, elapsed time, and the length of the desired result.

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  s‿a‿m‿l ← ⟨7, 8, 3, 1+↕20⟩
#+end_src

Define a (50 chars) dyadic block function to execute the queries:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  Q ← {l≍˘∾(⍷𝕨⊸⊏˘)¨ l⊏ ((⍒(+´m⊸⊏˘)¨)⊸⊏ 𝕨⊸⊏˘⊐⊸⊔⊢) >1⊏¨ 𝕩}
#+end_src

** Top songs

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  s Q spd	
#+end_src

#+RESULTS:
#+begin_example
┌─                                                     
╵ 1  "Countless Skies"                                 
  2  "Divertimento I, K.136: Allegro"                  
  3  "The Numbers"                                     
  4  "Autre temps"                                     
  5  "Ghost of Perdition"                              
  6  "Crossing the Road Material"                      
  7  "Hoppípolla"                                      
  8  "Ether"                                           
  9  "Colossus"                                        
  10 "River"                                           
  11 "El Tete"                                         
  12 "Will o the Wisp"                                 
  13 "Pakumba"                                         
  14 "Damned Rope"                                     
  15 "Eternal Rains Will Come"                         
  16 "La femme d'argent"                               
  17 "Bajanda"                                         
  18 "Nimrodel - Medley"                               
  19 "Breathe (In The Air) - 2011 Remastered Version"  
  20 "In The Shadow Of Our Pale Companion"             
                                                      ┘
#+end_example

** Top artists

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  a Q spd
#+end_src

#+RESULTS:
#+begin_example
┌─                              
╵ 1  "Opeth"                    
  2  "Wolfgang Amadeus Mozart"  
  3  "Pink Floyd"               
  4  "Be'lakor"                 
  5  "Sigur Rós"                
  6  "Coldplay"                 
  7  "Mogwai"                   
  8  "Chocolate Mc"             
  9  "Radiohead"                
  10 "Joaquín Sabina"           
  11 "Iron & Wine"              
  12 "Rammstein"                
  13 "Alcest"                   
  14 "Buena Fe"                 
  15 "Silvio Rodríguez"         
  16 "Amon Amarth"              
  17 "In Mourning"              
  18 "Lamb of God"              
  19 "Camel"                    
  20 "Omnium Gatherum"          
                               ┘
#+end_example

** Bonus: Opeth anthology

This is the Opeth album I would recommend anyone. The query function needs to be modified a bit for generating it.
But before that, let's look at the [[https://www.opeth.com/releases/albums][official discography]]:

#+begin_src bqn :results none :exports both :tangle ./bqn/spodat.bqn
  lo ← (↕∘⌈+´÷≠) 7‿5‿9‿7‿8‿6‿8‿8‿7‿10‿7‿11‿10
#+end_src

Then:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  O ← {lo (1⊸+∘⊣≍˘⊏) (⊢˝˘⊸∊⟜𝕨/⊏˘) ∾(⍷s‿a⊸⊏˘)¨ ((⍒(+´m⊸⊏˘)¨)⊸⊏ s⊸⊏˘⊐⊸⊔⊢) >1⊏¨ 𝕩}
#+end_src

Enjoy:

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  spd O˜⋈ "Opeth" 
#+end_src

#+RESULTS:
#+begin_example
┌─                             
╵ 1 "Ghost of Perdition"       
  2 "River"                    
  3 "Will o the Wisp"          
  4 "Eternal Rains Will Come"  
  5 "The Drapery Falls"        
  6 "Elysian Woes"             
  7 "Burden"                   
  8 "Harvest"                  
                              ┘
#+end_example
