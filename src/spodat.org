#+TITLE: Songs to pave the seasons
#+INCLUDE: "html-head.org"

I have analyzed my Spotify data[fn:1] for the period 2016-2024. The results accurately represent
my actual music taste[fn:2].

** Technical details

This is a suitable task for an array language, so I rely on [[https://mlochbaum.github.io/BQN/index.html][BQN]] which is my
favorite one:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  ‚ü®P‚áêParse‚ü© ‚Üê ‚Ä¢Import "../bqn-libs/json.bqn"
  @ ‚ä£ spd ‚Üê P ‚Ä¢file.Chars "../supp/spdat/data.json"
#+end_src

Additional structural information is needed, namely index of the songs,
artists, elapsed time, and the length of the desired result.

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  s‚Äøa‚Äøm‚Äøl ‚Üê ‚ü®7, 8, 3, 1+‚Üï20‚ü©
#+end_src

We define a (50 chars) dyadic block function to execute the queries:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  Q ‚Üê {l‚âçÀò‚àæ(‚ç∑ùï®‚ä∏‚äèÀò)¬® l‚äè ((‚çí(+¬¥m‚ä∏‚äèÀò)¬®)‚ä∏‚äè ùï®‚ä∏‚äèÀò‚äê‚ä∏‚äî‚ä¢) >1‚äè¬® ùï©}
#+end_src

** Top songs

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  s Q spd	
#+end_src

#+RESULTS:
#+begin_example
‚îå‚îÄ                                                     
‚ïµ 1  "Countless Skies"                                 
  2  "Divertimento I, K.136: Allegro"                  
  3  "The Numbers"                                     
  4  "Autre temps"                                     
  5  "Ghost of Perdition"                              
  6  "Crossing the Road Material"                      
  7  "Hopp√≠polla"                                      
  8  "Ether"                                           
  9  "Colossus"                                        
  10 "River"                                           
  11 "El Tete"                                         
  12 "Will o the Wisp"                                 
  13 "Pakumba"                                         
  14 "Damned Rope"                                     
  15 "Eternal Rains Will Come"                         
  16 "La femme d'argent"                               
  17 "Bajanda"                                         
  18 "Nimrodel - Medley"                               
  19 "Breathe (In The Air) - 2011 Remastered Version"  
  20 "In The Shadow Of Our Pale Companion"             
                                                      ‚îò
#+end_example

** Top artists

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  a Q spd
#+end_src

#+RESULTS:
#+begin_example
‚îå‚îÄ                              
‚ïµ 1  "Opeth"                    
  2  "Wolfgang Amadeus Mozart"  
  3  "Pink Floyd"               
  4  "Be'lakor"                 
  5  "Sigur R√≥s"                
  6  "Coldplay"                 
  7  "Mogwai"                   
  8  "Chocolate Mc"             
  9  "Radiohead"                
  10 "Joaqu√≠n Sabina"           
  11 "Iron & Wine"              
  12 "Rammstein"                
  13 "Alcest"                   
  14 "Buena Fe"                 
  15 "Silvio Rodr√≠guez"         
  16 "Amon Amarth"              
  17 "In Mourning"              
  18 "Lamb of God"              
  19 "Camel"                    
  20 "Omnium Gatherum"          
                               ‚îò
#+end_example

** Bonus: Opeth anthology

This is the Opeth album I would recommend to anyone. The query function needs to be modified a bit for generating it.
But before that, let's look at the [[https://www.opeth.com/releases/albums][official discography]]:

#+begin_src bqn :results none :exports both :tangle ./bqn/spodat.bqn
  lo ‚Üê (‚Üï‚àò‚åà+¬¥√∑‚â†) 7‚Äø5‚Äø9‚Äø7‚Äø8‚Äø6‚Äø8‚Äø8‚Äø7‚Äø10‚Äø7‚Äø11‚Äø10
#+end_src

Then:

#+begin_src bqn :results none :tangle ./bqn/spodat.bqn
  O ‚Üê {lo (1‚ä∏+‚àò‚ä£‚âçÀò‚äè) (‚ä¢ÀùÀò‚ä∏‚àä‚üúùï®/‚äèÀò) ‚àæ(‚ç∑s‚Äøa‚ä∏‚äèÀò)¬® ((‚çí(+¬¥m‚ä∏‚äèÀò)¬®)‚ä∏‚äè s‚ä∏‚äèÀò‚äê‚ä∏‚äî‚ä¢) >1‚äè¬® ùï©}
#+end_src

Enjoy:

#+begin_src bqn :exports both :tangle ./bqn/spodat.bqn
  spd OÀú‚ãà "Opeth" 
#+end_src

#+RESULTS:
#+begin_example
‚îå‚îÄ                             
‚ïµ 1 "Ghost of Perdition"       
  2 "River"                    
  3 "Will o the Wisp"          
  4 "Eternal Rains Will Come"  
  5 "The Drapery Falls"        
  6 "Elysian Woes"             
  7 "Burden"                   
  8 "Harvest"                  
                              ‚îò
#+end_example

[fn:1] It is possible to request a detailed report of all user activity since the account was created. There are
some [[https://support.spotify.com/us/article/understanding-my-data/][interesting fields]] in the data, but more advanced information, such as genre, requires querying the
Spotify Web API, which is beyond the scope of this post.
[fn:2] Well, modulo all from =Tool= and =Silent state optimizer= from =Leech=, which are definitely in my top ten,
and which I listen to on YouTube. It's possible to analyze the [[https://takeout.google.com/settings/takeout][data]] from this site as well‚Äîperhaps in a follow-up post.

#+BEGIN_EXPORT html
  <div style="text-align: center; font-size: 2em; padding: 20px 0;">
    <a href="https://panadestein.github.io/blog/" style="text-decoration: none;">‚äë‚àò‚àû</a>
  </div>
#+END_EXPORT
